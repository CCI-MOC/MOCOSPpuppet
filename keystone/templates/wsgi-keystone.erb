Listen 5000
Listen 35357
WSGIDaemonProcess keystone-public processes=10 threads=1 user=keystone group=keystone display-name=%{GROUP}
WSGIDaemonProcess keystone-admin processes=10 threads=1 user=keystone group=keystone display-name=%{GROUP}

<VirtualHost *:5000>
    WSGIProcessGroup keystone-public
    WSGIScriptAlias / /usr/bin/keystone-wsgi-public
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    LimitRequestBody 114688
    <IfVersion >= 2.4>
      ErrorLogFormat "%{cu}t %M"
    </IfVersion>

    SSLEngine on
    SSLCertificateFile      "/etc/pki/tls/certs/horizon.crt"
    SSLCertificateKeyFile   "/etc/pki/tls/private/horizon.key"
    SSLCACertificatePath    "/etc/pki/tls/certs"
    SSLCACertificateFile    "/etc/pki/ca-trust/source/anchors/rootCA.crt"


    ErrorLog /var/log/httpd/keystone.log
    CustomLog /var/log/httpd/keystone_access.log combined

    <Directory /usr/bin>
        <IfVersion >= 2.4>
            Require all granted
        </IfVersion>
        <IfVersion < 2.4>
            Order allow,deny
            Allow from all
        </IfVersion>
    </Directory>
    <% if scope.lookupvar('quickstack::params::sso_url') != :undef -%>

    LoadModule auth_openidc_module modules/mod_auth_openidc.so
    OIDCClaimPrefix "OIDC-"
    OIDCResponseType "id_token"
    OIDCScope "openid email profile"
    OIDCProviderMetadataURL <%= scope.lookupvar('quickstack::params::sso_url') -%>auth/realms/moc/.well-known/openid-configuration
    OIDCClientID <%= scope.lookupvar('quickstack::params::sso_uid') -%> 
    OIDCClientSecret <%= scope.lookupvar('quickstack::params::sso_secret') -%> 
    OIDCCryptoPassphrase openstack
    OIDCRedirectURI <%= scope.lookupvar('quickstack::params::controller_pub_url') -%>:5000/v3/auth/OS-FEDERATION/identity_providers/moc/protocols/openid/websso
    OIDCRedirectURI <%= scope.lookupvar('quickstack::params::controller_pub_url') -%>:5000/v3/auth/OS-FEDERATION/websso
    OIDCRedirectURI <%= scope.lookupvar('quickstack::params::controller_pub_url') -%>:5000/v3/OS-FEDERATION/identity_providers/moc/protocols/openid/auth

    OIDCOAuthClientID <%= scope.lookupvar('quickstack::params::sso_uid') -%> 
    OIDCOAuthClientSecret <%= scope.lookupvar('quickstack::params::sso_secret') -%> 
    OIDCOAuthIntrospectionEndpoint <%= scope.lookupvar('quickstack::params::sso_url') -%>auth/realms/moc/protocol/openid-connect/token/introspect
    <LocationMatch /v3/OS-FEDERATION/identity_providers/.*?/protocols/openid/auth>
        AuthType openid-connect
        Require valid-user
    </LocationMatch>

#    <Location ~ "/v3/auth/OS-FEDERATION/websso">
#        AuthType openid-connect
#        Require valid-user
#    </Location>

    <Location ~ "/v3/auth/OS-FEDERATION/identity_providers/moc/protocols/openid/websso">
        AuthType openid-connect
        Require valid-user
    </Location>
    <% end -%>
</VirtualHost>

<VirtualHost *:35357>
    WSGIProcessGroup keystone-admin
    WSGIScriptAlias / /usr/bin/keystone-wsgi-admin
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    LimitRequestBody 114688
    <IfVersion >= 2.4>
      ErrorLogFormat "%{cu}t %M"
    </IfVersion>

    SSLEngine on
    SSLCertificateFile      "/etc/pki/tls/certs/horizon.crt"
    SSLCertificateKeyFile   "/etc/pki/tls/private/horizon.key"
    SSLCACertificatePath    "/etc/pki/tls/certs"
    SSLCACertificateFile    "/etc/pki/ca-trust/source/anchors/rootCA.crt"

    ErrorLog /var/log/httpd/keystone.log
    CustomLog /var/log/httpd/keystone_access.log combined

    <Directory /usr/bin>
        <IfVersion >= 2.4>
            Require all granted
        </IfVersion>
        <IfVersion < 2.4>
            Order allow,deny
            Allow from all
        </IfVersion>
    </Directory>
</VirtualHost>

Alias /identity /usr/bin/keystone-wsgi-public
<Location /identity>
    SetHandler wsgi-script
    Options +ExecCGI

    WSGIProcessGroup keystone-public
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
</Location>

Alias /identity_admin /usr/bin/keystone-wsgi-admin
<Location /identity_admin>
    SetHandler wsgi-script
    Options +ExecCGI

    WSGIProcessGroup keystone-admin
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
</Location>

